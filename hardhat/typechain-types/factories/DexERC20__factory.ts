/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { DexERC20, DexERC20Interface } from "../DexERC20";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferfrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019c7380380620019c7833981810160405281019062000037919062000291565b826001908162000048919062000576565b5081600290816200005a919062000576565b5080600360006101000a81548160ff021916908360ff16021790555033600360016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200065d565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200012982620000de565b810181811067ffffffffffffffff821117156200014b576200014a620000ef565b5b80604052505050565b600062000160620000c0565b90506200016e82826200011e565b919050565b600067ffffffffffffffff821115620001915762000190620000ef565b5b6200019c82620000de565b9050602081019050919050565b60005b83811015620001c9578082015181840152602081019050620001ac565b60008484015250505050565b6000620001ec620001e68462000173565b62000154565b9050828152602081018484840111156200020b576200020a620000d9565b5b62000218848285620001a9565b509392505050565b600082601f830112620002385762000237620000d4565b5b81516200024a848260208601620001d5565b91505092915050565b600060ff82169050919050565b6200026b8162000253565b81146200027757600080fd5b50565b6000815190506200028b8162000260565b92915050565b600080600060608486031215620002ad57620002ac620000ca565b5b600084015167ffffffffffffffff811115620002ce57620002cd620000cf565b5b620002dc8682870162000220565b935050602084015167ffffffffffffffff8111156200030057620002ff620000cf565b5b6200030e8682870162000220565b925050604062000321868287016200027a565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200037e57607f821691505b60208210810362000394576200039362000336565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003fe7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620003bf565b6200040a8683620003bf565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000457620004516200044b8462000422565b6200042c565b62000422565b9050919050565b6000819050919050565b620004738362000436565b6200048b62000482826200045e565b848454620003cc565b825550505050565b600090565b620004a262000493565b620004af81848462000468565b505050565b5b81811015620004d757620004cb60008262000498565b600181019050620004b5565b5050565b601f8211156200052657620004f0816200039a565b620004fb84620003af565b810160208510156200050b578190505b620005236200051a85620003af565b830182620004b4565b50505b505050565b600082821c905092915050565b60006200054b600019846008026200052b565b1980831691505092915050565b600062000566838362000538565b9150826002028217905092915050565b62000581826200032b565b67ffffffffffffffff8111156200059d576200059c620000ef565b5b620005a9825462000365565b620005b6828285620004db565b600060209050601f831160018114620005ee5760008415620005d9578287015190505b620005e5858262000558565b86555062000655565b601f198416620005fe866200039a565b60005b82811015620006285784890151825560018201915060208501945060208101905062000601565b8683101562000648578489015162000644601f89168262000538565b8355505b6001600288020188555050505b505050505050565b61135a806200066d6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806363b0545f1161006657806363b0545f1461012257806370a082311461015257806395d89b4114610182578063a9059cbb146101a0578063dd62ed3e146101d057610093565b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100e6578063313ce56714610104575b600080fd5b6100a0610200565b6040516100ad9190610db9565b60405180910390f35b6100d060048036038101906100cb9190610e74565b610292565b6040516100dd9190610ecf565b60405180910390f35b6100ee6103f8565b6040516100fb9190610ef9565b60405180910390f35b61010c610401565b6040516101199190610f30565b60405180910390f35b61013c60048036038101906101379190610f4b565b610418565b6040516101499190610ecf565b60405180910390f35b61016c60048036038101906101679190610f9e565b610944565b6040516101799190610ef9565b60405180910390f35b61018a61098d565b6040516101979190610db9565b60405180910390f35b6101ba60048036038101906101b59190610e74565b610a1f565b6040516101c79190610ecf565b60405180910390f35b6101ea60048036038101906101e59190610fcb565b610ca2565b6040516101f79190610ef9565b60405180910390f35b60606001805461020f9061103a565b80601f016020809104026020016040519081016040528092919081815260200182805461023b9061103a565b80156102885780601f1061025d57610100808354040283529160200191610288565b820191906000526020600020905b81548152906001019060200180831161026b57829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610302576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f9906110dd565b60405180910390fd5b600033905082600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925856040516103e59190610ef9565b60405180910390a3600191505092915050565b60008054905090565b6000600360009054906101000a900460ff16905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610488576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047f9061116f565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561050a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050190611201565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105559190611250565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105e39190611284565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106839190610ef9565b60405180910390a3600033905082600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561074f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074690611304565b60405180910390fd5b82600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107d79190611250565b600560008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516109309190610ef9565b60405180910390a360019150509392505050565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606002805461099c9061103a565b80601f01602080910402602001604051908101604052809291908181526020018280546109c89061103a565b8015610a155780601f106109ea57610100808354040283529160200191610a15565b820191906000526020600020905b8154815290600101906020018083116109f857829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a869061116f565b60405180910390fd5b600033905082600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541015610b16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0d90611201565b60405180910390fd5b82600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b619190611250565b600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555082600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610bef9190611284565b600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef85604051610c8f9190610ef9565b60405180910390a3600191505092915050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610d63578082015181840152602081019050610d48565b60008484015250505050565b6000601f19601f8301169050919050565b6000610d8b82610d29565b610d958185610d34565b9350610da5818560208601610d45565b610dae81610d6f565b840191505092915050565b60006020820190508181036000830152610dd38184610d80565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e0b82610de0565b9050919050565b610e1b81610e00565b8114610e2657600080fd5b50565b600081359050610e3881610e12565b92915050565b6000819050919050565b610e5181610e3e565b8114610e5c57600080fd5b50565b600081359050610e6e81610e48565b92915050565b60008060408385031215610e8b57610e8a610ddb565b5b6000610e9985828601610e29565b9250506020610eaa85828601610e5f565b9150509250929050565b60008115159050919050565b610ec981610eb4565b82525050565b6000602082019050610ee46000830184610ec0565b92915050565b610ef381610e3e565b82525050565b6000602082019050610f0e6000830184610eea565b92915050565b600060ff82169050919050565b610f2a81610f14565b82525050565b6000602082019050610f456000830184610f21565b92915050565b600080600060608486031215610f6457610f63610ddb565b5b6000610f7286828701610e29565b9350506020610f8386828701610e29565b9250506040610f9486828701610e5f565b9150509250925092565b600060208284031215610fb457610fb3610ddb565b5b6000610fc284828501610e29565b91505092915050565b60008060408385031215610fe257610fe1610ddb565b5b6000610ff085828601610e29565b925050602061100185828601610e29565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061105257607f821691505b6020821081036110655761106461100b565b5b50919050565b7f617070726f766520746f20746865207a65726f2061646472657373206973206e60008201527f6f7420616c6c6f77656400000000000000000000000000000000000000000000602082015250565b60006110c7602a83610d34565b91506110d28261106b565b604082019050919050565b600060208201905081810360008301526110f6816110ba565b9050919050565b7f7472616e7366657220746f20746865207a65726f20616464726573732069732060008201527f6e6f7420616c6c6f776564000000000000000000000000000000000000000000602082015250565b6000611159602b83610d34565b9150611164826110fd565b604082019050919050565b600060208201905081810360008301526111888161114c565b9050919050565b7f7472616e7366657220616d6f756e742063616e6e6f742065786365656420626160008201527f6c6e636500000000000000000000000000000000000000000000000000000000602082015250565b60006111eb602483610d34565b91506111f68261118f565b604082019050919050565b6000602082019050818103600083015261121a816111de565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061125b82610e3e565b915061126683610e3e565b925082820390508181111561127e5761127d611221565b5b92915050565b600061128f82610e3e565b915061129a83610e3e565b92508282019050808211156112b2576112b1611221565b5b92915050565b7f696e73756666696369656e7420616c6c6f77616e636500000000000000000000600082015250565b60006112ee601683610d34565b91506112f9826112b8565b602082019050919050565b6000602082019050818103600083015261131d816112e1565b905091905056fea2646970667358221220c5e8e4f071e818d02aee041073f7dc2e24dfd74e75a485008e9a0f96d798e5a164736f6c63430008120033";

type DexERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DexERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DexERC20__factory extends ContractFactory {
  constructor(...args: DexERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DexERC20> {
    return super.deploy(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    ) as Promise<DexERC20>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    decimals_: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name_,
      symbol_,
      decimals_,
      overrides || {}
    );
  }
  override attach(address: string): DexERC20 {
    return super.attach(address) as DexERC20;
  }
  override connect(signer: Signer): DexERC20__factory {
    return super.connect(signer) as DexERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DexERC20Interface {
    return new utils.Interface(_abi) as DexERC20Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DexERC20 {
    return new Contract(address, _abi, signerOrProvider) as DexERC20;
  }
}
